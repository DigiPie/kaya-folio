"use strict";(self.webpackChunkevantay_com=self.webpackChunkevantay_com||[]).push([[7291],{1556:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>l});var s=i(4848),o=i(8453);const c={title:"Docker Cheatsheet"},r=void 0,t={id:"docker-cheatsheet",title:"Docker Cheatsheet",description:"Published on December 24, 2020",source:"@site/docs/docker-cheatsheet.md",sourceDirName:".",slug:"/docker-cheatsheet",permalink:"/docs/docker-cheatsheet",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Docker Cheatsheet"},sidebar:"docs",previous:{title:"Ikigai",permalink:"/docs/ikigai"},next:{title:"GKE Cheatsheet",permalink:"/docs/gcp-gke-cheatsheet"}},d={},l=[{value:"Useful Docker commands",id:"useful-docker-commands",level:2},{value:"Starting an interactive shell",id:"starting-an-interactive-shell",level:3},{value:"Stopping and removing containers",id:"stopping-and-removing-containers",level:3},{value:"Inspecting container metadata",id:"inspecting-container-metadata",level:3},{value:"Viewing container logs",id:"viewing-container-logs",level:3},{value:"Docker and Github",id:"docker-and-github",level:2},{value:"Deploy script",id:"deploy-script",level:3},{value:"Resources",id:"resources",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Published on December 24, 2020"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.em,{children:["This document was migrated from ",(0,s.jsx)(n.a,{href:"https://digipie.github.io/digidocs/container/docker/",children:"DigiDocs"})]})}),"\n",(0,s.jsx)(n.p,{children:"In this section you will find my notes on using Docker for the deployment of Git projects."}),"\n",(0,s.jsx)(n.h2,{id:"useful-docker-commands",children:"Useful Docker commands"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["You do not have to write out the ",(0,s.jsx)(n.code,{children:"CONTAINER_ID"})," in full. The partial ",(0,s.jsx)(n.code,{children:"CONTAINER_ID"})," specified need only uniquely identify the container. Given a container 'aa151b912448' and 'aa153cd14238', ",(0,s.jsx)(n.code,{children:"docker logs aa15"})," will not work, but ",(0,s.jsx)(n.code,{children:"docker logs aa151"})," will."]})}),"\n",(0,s.jsx)(n.h3,{id:"starting-an-interactive-shell",children:"Starting an interactive shell"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker exec -it [CONTAINER_ID] bash\n"})}),"\n",(0,s.jsx)(n.h3,{id:"stopping-and-removing-containers",children:"Stopping and removing containers"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker stop $(docker ps -q)\ndocker rm $(docker ps -aq)\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"docker ps"})," options:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-q"}),": Only display numeric IDs"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-a"}),": Show all containers (default shows just running)"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"inspecting-container-metadata",children:"Inspecting container metadata"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker inspect [CONTAINER_ID]\n"})}),"\n",(0,s.jsx)(n.h3,{id:"viewing-container-logs",children:"Viewing container logs"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Typical command:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker logs [CONTAINER_ID]\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Follow log output for a specified duration:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker logs -f --until=[TIME]\n"})}),"\n",(0,s.jsx)(n.p,{children:"TIME can be a TIMESTAMP or relative (e.g. '10m' or '5s')"}),"\n",(0,s.jsx)(n.h2,{id:"docker-and-github",children:"Docker and Github"}),"\n",(0,s.jsx)(n.h3,{id:"deploy-script",children:"Deploy script"}),"\n",(0,s.jsxs)(n.p,{children:["This script assumes that the working directory contains a ",(0,s.jsx)(n.code,{children:".git"})," directory, ",(0,s.jsx)(n.code,{children:"Dockerfile"})," and ",(0,s.jsx)(n.code,{children:"package.json"}),". A ",(0,s.jsx)(n.code,{children:".gitignore"})," and a ",(0,s.jsx)(n.code,{children:".dockerignore"})," file may be useful too. It is also assumed that the project dependencies have been installed using ",(0,s.jsx)(n.code,{children:"npm install"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"deploy.sh"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'IMAGE_NAME=""\nVERSION="" # Can be left blank\nCONTAINER_NAME=""\nCONTAINER_PORT="" # To be mapped to HOST_PORT\nHOST_PORT="" # The port clients will access\n\ndocker stop $CONTAINER_NAME # Stop the running container\ndocker system prune -af # Removes the container and all unused images\ngit pull origin master # Pulls latest source files and image\ndocker build -t $IMAGE_NAME .\ndocker run --name $CONTAINER_NAME -p $CONTAINER_PORT:$HOST_PORT -d $IMAGE_NAME:$VERSION\n'})}),"\n",(0,s.jsx)(n.p,{children:"Before the script can be used, replace the following placeholders:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"IMAGE_NAME"})," : The name of your image."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"VERSION"})," : The version of your image. Can be left blank."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"CONTAINER_NAME"})," : The desired name of your container."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"CONTAINER_PORT"})," : The port of your container which your application is running on."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"HOST_PORT"})," : The host port your container port will be mapped to. This is the port that is exposed on the host system."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://digipie.github.io/digidocs/container/docker/",children:"Original copy of this document at DigiDocs"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.digitalocean.com/community/tutorials/how-to-build-a-node-js-application-with-docker#step-4-%E2%80%94-using-a-repository-to-work-with-images",children:"How To Build a Node.js Application with Docker"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.docker.com/engine/reference/commandline/logs/",children:"docker logs"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.docker.com/engine/reference/commandline/ps/",children:"docker ps"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>t});var s=i(6540);const o={},c=s.createContext(o);function r(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);