"use strict";(self.webpackChunkevantay_com=self.webpackChunkevantay_com||[]).push([[7182],{6330:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>o});var t=i(4848),s=i(8453);const a={title:"Scaling Memcached"},c=void 0,l={id:"scaling-memcached",title:"Scaling Memcached",description:"Published on April 14, 2021",source:"@site/docs/scaling-memcached.md",sourceDirName:".",slug:"/scaling-memcached",permalink:"/docs/scaling-memcached",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Scaling Memcached"},sidebar:"docs",previous:{title:"Reading List",permalink:"/docs/reading-list"},next:{title:"Reliable, Scalable, and Maintainable Applications",permalink:"/docs/reliable-scalable-maintainable"}},r={},o=[{value:"Context",id:"context",level:2},{value:"Key takeaways",id:"key-takeaways",level:2},{value:"References",id:"references",level:2}];function d(e){const n={a:"a",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Published on April 14, 2021"}),"\n",(0,t.jsxs)(n.p,{children:["Article review for ",(0,t.jsx)(n.a,{href:"https://levelup.gitconnected.com/lessons-learnt-from-scaling-memcached-in-production-86778ab616c7",children:"Melodies Sim's Medium Article: Lessons Learnt from Scaling Memcached in Production"})]}),"\n",(0,t.jsx)(n.h2,{id:"context",children:"Context"}),"\n",(0,t.jsx)(n.p,{children:"Memcached is a(n):"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["In-memory cache typically used for look-aside caching","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Look-aside versus look-through caching: see slides 14 and 15 of ",(0,t.jsx)(n.a,{href:"https://www.cs.princeton.edu/courses/archive/fall19/cos316/lectures/08-caching.pdf",children:"Princeton COS 316 Intro to Caching"})]}),"\n",(0,t.jsx)(n.li,{children:"Look-aside caching: client requests item from backing store (database) on cache miss; simpler implementation, more flexible, slower on misses"}),"\n",(0,t.jsx)(n.li,{children:"Look-through caching: cache requests item from backing store on cache miss; harder implementation, less flexible, better consistency"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Simple implementation without built-in high availability features"}),"\n",(0,t.jsx)(n.li,{children:"Used by planet-scale companies such as Facebook and Twitter"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The article discusses strategies for building caches with high availability and strong data consistency."}),"\n",(0,t.jsx)(n.h2,{id:"key-takeaways",children:"Key takeaways"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://sites.cs.ucsb.edu/~agrawal/fall2009/dynamo.pdf",children:"Trade-off between ACID (C stands for consistency) properties and availability"})}),"\n",(0,t.jsxs)(n.li,{children:["Memcached can be used as Authoritative Storage via Remote Marker mechanism","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Mechanism used to minimize probability of reading stale data in DB replicas"}),"\n",(0,t.jsx)(n.li,{children:"When the client writes to the master DB, there is a replication delay between it and its replicas"}),"\n",(0,t.jsx)(n.li,{children:"The client will write a marker to Memcached after writing to the master DB"}),"\n",(0,t.jsx)(n.li,{children:"Marker will have a short TTL - duration depending on DB replication delay"}),"\n",(0,t.jsx)(n.li,{children:"If marker exists, read from the master DB; otherwise read from DB replica"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Writes are not idempotent nor commutative; deletes are."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["If we write to DB then write to cache naively, race conditions will arise when there are concurrent writes as writes are non-commutative","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Leads to infinitely stale data given writes and no eventual data consistency"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["To avoid this issue, use delete instead: after writing to DB, do cache invalidation by deleting the data item from the cache","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Multiple deletes sent to the cache would not matter as you can only delete something once; ordering of delete doesn't matter too"}),"\n",(0,t.jsx)(n.li,{children:"Client will fetch the data item from the database on cache miss and update the most recent value to Memcached instead"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["There is still a small risk of stale data, if a delete occurs between a cache read and set (see Melodies's article for illustration)","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Facebook deals with it using a check-and-set approach via a lease mechanism"}),"\n",(0,t.jsx)(n.li,{children:"On cache miss, client receives a lease token for the requested key"}),"\n",(0,t.jsx)(n.li,{children:"On cache set, client verifies the lease token before setting the key"}),"\n",(0,t.jsx)(n.li,{children:"If Memcached receive a delete request for the key, the lease is invalidated"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://levelup.gitconnected.com/lessons-learnt-from-scaling-memcached-in-production-86778ab616c7",children:"Melodies Sim's Medium Article: Lessons Learnt from Scaling Memcached in Production"})," - good introduction to Memcached in Production, has more references"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://research.fb.com/wp-content/uploads/2016/11/scaling-memcache-at-facebook.pdf",children:"Scaling Memcache at Facebook"})," - the paper the article was based upon"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://www.cs.princeton.edu/courses/archive/fall19/cos316/lectures/08-caching.pdf",children:"Princeton COS 316 Intro to Caching"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://sites.cs.ucsb.edu/~agrawal/fall2009/dynamo.pdf",children:"Dynamo: Amazon\u2019s Highly Available Key-value Store"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>l});var t=i(6540);const s={},a=t.createContext(s);function c(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);