"use strict";(self.webpackChunkevantay_com=self.webpackChunkevantay_com||[]).push([[3393],{3799:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var t=s(4848),o=s(8453);const i={title:"Dependency management"},l=void 0,r={id:"ruby-dependency-management",title:"Dependency management",description:"Published on October 24, 2021",source:"@site/docs/ruby-dependency-management.md",sourceDirName:".",slug:"/ruby-dependency-management",permalink:"/docs/ruby-dependency-management",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Dependency management"},sidebar:"docs",previous:{title:"Network Model (CS4226)",permalink:"/docs/network-model"},next:{title:"C Cheatsheet",permalink:"/docs/c-cheatsheet"}},d={},c=[{value:"Why do we use bundler?",id:"why-do-we-use-bundler",level:2},{value:"Resources",id:"resources",level:2}];function a(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Published on October 24, 2021"}),"\n",(0,t.jsx)(n.h2,{id:"why-do-we-use-bundler",children:"Why do we use bundler?"}),"\n",(0,t.jsxs)(n.p,{children:["Why do we use ",(0,t.jsx)(n.code,{children:"bundle install"})," rather than ",(0,t.jsx)(n.code,{children:"gem install"}),"?"]}),"\n",(0,t.jsxs)(n.p,{children:["Bundler installs the exact gems and versions that are needed. It resolves all dependency conflicts for you automatically, which you would have to manually resolve if you had used ",(0,t.jsx)(n.code,{children:"gem install"})," instead."]}),"\n",(0,t.jsxs)(n.p,{children:["For example, if you have two gems requiring different versions of the same gem ",(0,t.jsx)(n.code,{children:"nokogiri"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-Gemfile",children:"sunspot_rails\n  nokogiri (>= 1.2.0)\n\nwebrat\n  nokogiri (>= 1.3) \n"})}),"\n",(0,t.jsxs)(n.p,{children:["If you use ",(0,t.jsx)(n.code,{children:"gem install"})," to install ",(0,t.jsx)(n.code,{children:"sunspot_rails"})," and ",(0,t.jsx)(n.code,{children:"webrat"}),", it might install both ",(0,t.jsx)(n.code,{children:"1.2.0"})," and ",(0,t.jsx)(n.code,{children:"1.3.0"})," nokogiri versions or even complain about version conflicts. If you use ",(0,t.jsx)(n.code,{children:"bundle install"})," instead, Bundler will resolve this dependency conflict by installing the right ",(0,t.jsx)(n.code,{children:"nokogiri"})," version, which is ",(0,t.jsx)(n.code,{children:"1.3"})," in this example."]}),"\n",(0,t.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://bundler.io/",children:"bundler.io"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://stackoverflow.com/questions/7273853/why-bundle-install-a-gem-instead-of-gem-install-for-a-rails-3-app",children:'Why "bundle install" a gem instead of "gem install" for a rails 3 app?'})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>r});var t=s(6540);const o={},i=t.createContext(o);function l(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);